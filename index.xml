<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>PigAunt 的博客</title><link>https://www.pigaunt.top/</link><description>这是 PigAunt 的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 20 Jul 2022 19:51:52 +0800</lastBuildDate><atom:link href="https://www.pigaunt.top/index.xml" rel="self" type="application/rss+xml"/><item><title>数学知识笔记</title><link>https://www.pigaunt.top/notes/</link><pubDate>Wed, 20 Jul 2022 19:51:52 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/notes/</guid><description>最近学到的数学知识笔记，如有谬误欢迎指正 :yum:。 ExGCD 用于解不定方程 $ax + by = \gcd(a, b)$ 的一组整数解。 当 $b = 0$ 时，有一组解 $x = 1, y = 0$；我们研究能</description></item><item><title>矩阵乘法及应用</title><link>https://www.pigaunt.top/matrix/</link><pubDate>Fri, 18 Mar 2022 15:36:15 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/matrix/</guid><description>肤浅地认识下矩阵 至少从表面上看，矩阵是一个二维数组。矩阵的加减法就是在相同的位置上进行加减，即： $$ C_{i, j} = A_{i, j} \pm B_{i, j} $$ 其中矩阵 $A$，$B$ 和</description></item><item><title>Z 函数及其求法（扩展 KMP）</title><link>https://www.pigaunt.top/z-algorithm/</link><pubDate>Wed, 17 Nov 2021 16:13:34 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/z-algorithm/</guid><description>Z 函数 （以下默认字符串下标从0开始）。 在 KMP 字符串匹配算法中，使用了$\pi$来表示一个字符串的最长公共前后缀，现在我们介绍一个与公共前缀有关</description></item><item><title>回文字符串和 Manacher 算法</title><link>https://www.pigaunt.top/palindrome-and-manacher-algorithm/</link><pubDate>Tue, 16 Nov 2021 20:03:14 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/palindrome-and-manacher-algorithm/</guid><description>回文字符串及回文中心表示法 形如$s_0, s_1, \dots,s_{i - 1}, s_i, s_{i - 1} \dots, s_1, s_0$或$s_0, s_1, \dots, s_i, s_i \dots, s_1, s_0$的，正着写和倒着写相同的字符串叫做**回</description></item><item><title>树形动态规划</title><link>https://www.pigaunt.top/tree-dp/</link><pubDate>Mon, 18 Oct 2021 10:50:57 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/tree-dp/</guid><description>问题简介 需要用动态规划解决的问题被搬到了树上（不再是线性或区间的），此类问题与其他的区别仅仅在于遍历所有状态需要在树上进行，而不是用一个循环</description></item><item><title>数位型动态规划</title><link>https://www.pigaunt.top/dp-on-numbers/</link><pubDate>Mon, 18 Oct 2021 10:50:50 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/dp-on-numbers/</guid><description>问题简介 此类问题一般是求在一个特定范围内满足某种特殊性质的数的数量，也有求其它信息的类型。数位型动态规划做法基本类似，大多是预处理-按位枚举</description></item><item><title>状态压缩的动态规划</title><link>https://www.pigaunt.top/state-compressed-dp/</link><pubDate>Mon, 23 Aug 2021 09:57:53 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/state-compressed-dp/</guid><description>分类 基本有两种： 棋盘式的动态规划（基于联通性） 集合式的动态规划 状态压缩 利用某些手段（以二进制压缩为主）将复杂的状态处理后存储。 分类 棋盘式的动</description></item><item><title>单调队列</title><link>https://www.pigaunt.top/monotonous-queue/</link><pubDate>Wed, 11 Aug 2021 11:32:30 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/monotonous-queue/</guid><description>滑动窗口问题 洛谷-P1886-滑动窗口/【模板】单调队列 有一个长为$n$的序列$a$，以及一个大小为$k$的窗口。现在这个从左边开始向右滑动</description></item><item><title>LIS和LCS</title><link>https://www.pigaunt.top/lis-and-lcs-problem/</link><pubDate>Wed, 11 Aug 2021 10:50:50 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/lis-and-lcs-problem/</guid><description>最长上升子序列（LIS）问题 给出一个由数字组成的序列，要求从中挑选尽量多的数，组成一个单调上升的子序列。 要解决这个问题，我们可以这样想： 如果</description></item><item><title>区间型动态规划</title><link>https://www.pigaunt.top/range-dp/</link><pubDate>Wed, 11 Aug 2021 10:50:50 +0800</pubDate><author>PigAunt</author><guid>https://www.pigaunt.top/range-dp/</guid><description>石子合并问题 有若干个石子排成一行，每个石子有一定的质量，现在要将它们合并成一堆，每一次合并产生的价值是两堆石子的质量和（只能合并相邻的石子）</description></item></channel></rss>